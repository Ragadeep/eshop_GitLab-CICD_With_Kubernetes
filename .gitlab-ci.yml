# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always

before_script:
  - docker ps -aq --filter "status=exited" | xargs docker rm  # Remove all stopped containers
  - docker rmi -f $(docker images -q)  # Force delete all Docker images

stages:
- build
- test
- push
- deploy
- review
- dast
- staging
- canary
- production
- incremental rollout 10%
- incremental rollout 25%
- incremental rollout 50%
- incremental rollout 100%
- performance
- cleanup

variables:
  VERSION: $CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID
  DOCKER_REGISTRY: eshopimages.azurecr.io
  ADSERVICE_TAG: eshopimages.azurecr.io/eshop/adservice
  CARTSERVICE_TAG: eshopimages.azurecr.io/eshop/cartservice
  CHECKOUTSERVICE_TAG: eshopimages.azurecr.io/eshop/checkoutservice
  CURRENCYSERVICE_TAG: eshopimages.azurecr.io/eshop/currencyservice
  EMAILSERVICE_TAG: eshopimages.azurecr.io/eshop/emailservice
  FRONTEND_TAG: eshopimages.azurecr.io/eshop/frontend
  LOADGENERATOR_TAG: eshopimages.azurecr.io/eshop/loadgenerator
  PAYMENTSERVICE_TAG: eshopimages.azurecr.io/eshop/paymentservice
  PRODUCTCATALOGSERVICE_TAG: eshopimages.azurecr.io/eshop/productcatalogservice
  RECOMMENDATIONSERVICE_TAG: eshopimages.azurecr.io/eshop/recommendationservice
  SHIPPINGSERVICE_TAG: eshopimages.azurecr.io/eshop/shippingservice

.build_image:
  stage: build
  tags:
    - build
    - microservices

build_adservice:
  extends: .build_image
  script:
    - docker build -t $ADSERVICE_TAG:$VERSION src/adservice

.build_cartservice:
  extends: .build_image
  script:
    - docker build -t $CARTSERVICE_TAG:$VERSION src/cartservice/src

.build_checkoutservice:
  extends: .build_image
  script:
    - docker build -t $CHECKOUTSERVICE_TAG:$VERSION src/checkoutservice

.build_currencyservice:
  extends: .build_image
  script:
    - docker build -t $CURRENCYSERVICE_TAG:$VERSION src/currencyservice

.build_emailservice:
  extends: .build_image
  script:
    - docker build -t $EMAILSERVICE_TAG:$VERSION src/checkoutservice

.build_frontend:
  extends: .build_image
  script:
    - docker build -t $FRONTEND_TAG:$VERSION src/frontend

.build_loadgenerator:
  extends: .build_image
  script:
    - docker build -t $LOADGENERATOR_TAG:$VERSION src/loadgenerator

.build_paymentservice:
  extends: .build_image
  script:
    - docker build -t $PAYMENTSERVICE_TAG:$VERSION src/paymentservice

.build_productcatalogservice:
  extends: .build_image
  script:
    - docker build -t $PRODUCTCATALOGSERVICE_TAG:$VERSION src/productcatalogservice

.build_recommendationservice:
  extends: .build_image
  script:
    - docker build -t $RECOMMENDATIONSERVICE_TAG:$VERSION src/recommendationservice

.build_shippingservice:
  extends: .build_image
  script:
    - docker build -t $SHIPPINGSERVICE_TAG:$VERSION src/shippingservice


.push_image: &push_image
  stage: push
  tags:
    - build
    - microservices
  before_script:
    - docker login -u $ACR_USER -p $ACR_PASSWORD $DOCKER_REGISTRY

push_adservice:
  <<: *push_image
  script:
    - docker tag $IMAGE_TAG:$CI_COMMIT_REF_SLUG $IMAGE_TAG:$VERSION
    - docker push $ADSERVICE_TAG:$CI_COMMIT_REF_SLUG
    - docker push $ADSERVICE_TAG:$VERSION

#docker tag $IMAGE_TAG:$CI_COMMIT_REF_SLUG $IMAGE_TAG:$VERSION
#docker push $IMAGE_TAG:$CI_COMMIT_REF_SLUG
#docker push $IMAGE_TAG:$VERSION

.push_cartservice:
  <<: *push_image
  script:
    - docker push $CARTSERVICE_TAG:$VERSION

.push_checkoutservice:
  <<: *push_image
  script:
    - docker push $CHECKOUTSERVICE_TAG:$VERSION

.push_currencyservice:
  <<: *push_image
  script:
    - docker push $CURRENCYSERVICE_TAG:$VERSION

.push_emailservice:
  <<: *push_image
  script:
    - docker push $EMAILSERVICE_TAG:$VERSION

.push_frontend:
  <<: *push_image
  script:
    - docker push $FRONTEND_TAG:$VERSION

.push_loadgenerator:
  <<: *push_image
  script:
    - docker push $LOADGENERATOR_TAG:$VERSION

.push_paymentservice:
  <<: *push_image
  script:
    - docker push $PAYMENTSERVICE_TAG:$VERSION

.push_productcatalogservice:
  <<: *push_image
  script:
    - docker push $PRODUCTCATALOGSERVICE_TAG:$VERSION

.push_recommendationservice:
  <<: *push_image
  script:
    - docker push $RECOMMENDATIONSERVICE_TAG:$VERSION

.push_shippingservice:
  <<: *push_image
  script:
    - docker push $SHIPPINGSERVICE_TAG:$VERSION




.build_image3:
  stage: build
  tags:
    - build
    - microservices
  variables:
    VERSION: $CI_PIPELINE_ID
    ADSERVICE_TAG: eshopimages.azurecr.io/eshop/adservice
  script:
    - bash script/docker-release.sh $ADSERVICE_TAG services src/adservice


